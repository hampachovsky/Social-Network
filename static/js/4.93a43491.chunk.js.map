{"version":3,"sources":["assets/images/user_img.png","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/Profile/MyPosts/Post/index.jsx","components/Profile/MyPosts/index.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/index.jsx","components/Profile/index.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Post","text","likeCount","className","style","item","src","alt","validationScheme","yup","shape","postValue","min","max","MyPosts","React","memo","props","postElements","profilePage","postData","map","p","id","postsContainer","initialValues","onSubmit","values","actions","addPost","setSubmitting","resetForm","validationSchema","validateOnBlur","dirty","isValid","handleChange","handleBlur","handleSubmit","postField","component","errors","name","type","onChange","onBlur","value","PostInput","disabled","addPostBtn","posts","myPosts","field","form","postValueInput","placeholder","MyPostsContainer","connect","state","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","profileStatusInputContainer","profileStatusInput","autoFocus","e","updateUserStatus","onDoubleClick","aboutMe","ProfileInfo","profile","profileContainer","profileImageContainer","profileImage","photos","large","userPhoto","infoContainer","fullName","lookingForAJob","jobDescriptionContainer","jobFindStatus","jobFindDescription","lookingForAJobDescription","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedId","getUserProfile","getUserStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.93a43491.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user_img.03a0c317.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"ProfileInfo_profileContainer__1-BWS\",\"profileImageContainer\":\"ProfileInfo_profileImageContainer__2EF4H\",\"profileImage\":\"ProfileInfo_profileImage__3VUa6\",\"infoContainer\":\"ProfileInfo_infoContainer__3JcOA\",\"fullName\":\"ProfileInfo_fullName__8M4Xt\",\"aboutMe\":\"ProfileInfo_aboutMe__77Qt8\",\"jobDescriptionContainer\":\"ProfileInfo_jobDescriptionContainer__3xeRh\",\"jobFindStatus\":\"ProfileInfo_jobFindStatus__2U7UQ\",\"jobFindDescription\":\"ProfileInfo_jobFindDescription__TdYHs\",\"profileStatusInputContainer\":\"ProfileInfo_profileStatusInputContainer__1bOTD\",\"profileStatusInput\":\"ProfileInfo_profileStatusInput__E5x9j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsContainer\":\"MyPosts_postsContainer__dabbr\",\"posts\":\"MyPosts_posts__3CEDY\",\"myPosts\":\"MyPosts_myPosts__1oLHw\",\"postField\":\"MyPosts_postField__12EqC\",\"errors\":\"MyPosts_errors__p65qh\",\"addPostBtn\":\"MyPosts_addPostBtn__1A5al\",\"postValueInput\":\"MyPosts_postValueInput__1F4fb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3RvLs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__98uf3\"};","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = ({ text, likeCount }) => {\r\n  return (\r\n    <div className={style.item}>\r\n      <img\r\n        src=\"https://cdnb.artstation.com/p/assets/images/images/023/675/213/20200125141012/smaller_square/ava-battle-img-1823.jpg?1579983012\"\r\n        alt=\"\"\r\n      />\r\n      {text}\r\n      <br />\r\n      Like: {likeCount}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React from 'react';\r\nimport * as yup from 'yup';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post';\r\n\r\nconst validationScheme = yup.object().shape({\r\n  postValue: yup.string().min(8, '8 Char min').max(300, '300 Char max'),\r\n});\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  const postElements = props.profilePage.postData.map((p) => (\r\n    <Post key={p.id} text={p.text} likeCount={p.likeCount} />\r\n  ));\r\n\r\n  return (\r\n    <div className={style.postsContainer}>\r\n      <Formik\r\n        initialValues={{ postValue: '' }}\r\n        onSubmit={(values, actions) => {\r\n          props.addPost(values.postValue);\r\n          actions.setSubmitting(false);\r\n          actions.resetForm({\r\n            postValue: '',\r\n          });\r\n        }}\r\n        validationSchema={validationScheme}\r\n        validateOnBlur\r\n      >\r\n        {({ values, dirty, isValid, handleChange, handleBlur, handleSubmit }) => (\r\n          <Form onSubmit={handleSubmit} className={style.postField}>\r\n            <ErrorMessage component={`p`} className={style.errors} name={`postValue`} />\r\n            <Field\r\n              type={`text`}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.postValue}\r\n              name={`postValue`}\r\n              component={PostInput}\r\n            />\r\n            <button disabled={!dirty && isValid} className={style.addPostBtn} type={`submit`}>\r\n              Add Post\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <div className={style.posts}>\r\n        <div className={style.myPosts}>My posts</div>\r\n        {postElements}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst PostInput = ({ field, form, ...props }) => (\r\n  <input {...field} className={style.postValueInput} placeholder=\"Post text\" />\r\n);\r\n\r\nexport default MyPosts;\r\n","import { connect } from 'react-redux';\r\nimport { addPost } from 'redux/profileReducer';\r\nimport MyPosts from '.';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage,\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n  addPost,\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport style from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatus = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  return (\r\n    <div>\r\n      {!editMode ? (\r\n        <div>\r\n          <p data-testid=\"status\" onDoubleClick={() => setEditMode(true)} className={style.aboutMe}>\r\n            {props.status ? props.status : 'No status'}\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div className={style.profileStatusInputContainer}>\r\n          <input\r\n            data-testid=\"editStatus\"\r\n            className={style.profileStatusInput}\r\n            autoFocus={true}\r\n            onChange={(e) => setStatus(e.target.value)}\r\n            onBlur={() => {\r\n              setEditMode(false);\r\n              props.updateUserStatus(status);\r\n            }}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","import Preloader from 'components/common/Preloader';\r\nimport React from 'react';\r\nimport userPhoto from '../../../assets/images/user_img.png';\r\nimport style from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) return <Preloader />;\r\n  return (\r\n    <div className={style.profileContainer}>\r\n      <div className={style.profileImageContainer}>\r\n        <img\r\n          className={style.profileImage}\r\n          src={props.profile.photos.large ? props.profile.photos.large : userPhoto}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className={style.infoContainer}>\r\n        <h2 className={style.fullName}>{props.profile.fullName}</h2>\r\n        <p className={style.aboutMe}>About me: {props.profile.aboutMe}</p>\r\n        <ProfileStatus updateUserStatus={props.updateUserStatus} status={props.status} />\r\n        {props.profile.lookingForAJob ? (\r\n          <div className={style.jobDescriptionContainer}>\r\n            <p className={style.jobFindStatus}>Work: in active search</p>\r\n            <p className={style.jobFindDescription}>\r\n              Description: {props.profile.lookingForAJobDescription}\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <p className={style.jobFindStatus}>Work: in active search</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport style from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/index';\r\n\r\nconst Profile = ({ status, profile, updateUserStatus }) => {\r\n  return (\r\n    <div className={style.profileContainer}>\r\n      <ProfileInfo status={status} profile={profile} updateUserStatus={updateUserStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { compose } from 'redux';\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from 'redux/profileReducer';\r\nimport Profile from '.';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Profile\r\n          updateUserStatus={this.props.updateUserStatus}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, updateUserStatus, getUserStatus }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}