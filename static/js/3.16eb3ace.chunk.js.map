{"version":3,"sources":["components/Dialogs/Chat/Chat.module.css","components/Dialogs/Chat/Message/Message.module.css","components/Dialogs/ChatList/ChatList.module.css","components/Dialogs/ChatList/ListItem/ListItem.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Chat/Message/index.jsx","components/Dialogs/Chat/index.jsx","components/Dialogs/Chat/ChatContainer.jsx","components/Dialogs/ChatList/ListItem/index.jsx","components/Dialogs/ChatList/index.jsx","components/Dialogs/ChatList/ChatListContainer.jsx","components/Dialogs/index.jsx"],"names":["module","exports","Message","props","owner","className","style","ownerMessage","avaOwnerContainer","avaOwnerImage","src","photoUrl","alt","ownerMessageText","leading","message","avaContainer","avaImage","messageText","validationSchema","yup","shape","messageBody","max","Chat","messageElement","dialogsPage","messages","filter","m","author","map","i","username","userData","content","chatContainer","chatHeader","chatHeaderItem","avaImageContainer","chatHeaderInfo","status","initialValues","onSubmit","values","actions","validateForm","sendMessage","setSubmitting","setValues","validateOnChange","validateOnBlur","dirty","touched","errors","isValid","handleChange","handleSubmit","chatFooter","onChange","value","textarea","placeholder","name","cols","rows","sendBtnContainer","disabled","sendBtn","type","component","connect","state","ListItem","activeClassName","active","listItem","to","userId","listItemInfo","ChatList","useState","query","setQuery","listElement","u","chatList","searchBarContainer","e","target","searchBar","listItems","ChatListContainer","Dialogs","ChatContainer"],"mappings":"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","file":"static/js/3.16eb3ace.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Chat_chatContainer__3fy2b\",\"chatHeader\":\"Chat_chatHeader__f11nZ\",\"chatHeaderItem\":\"Chat_chatHeaderItem__lOXnj\",\"avaImageContainer\":\"Chat_avaImageContainer__kemeM\",\"chatHeaderInfo\":\"Chat_chatHeaderInfo__33F0n\",\"username\":\"Chat_username__Y8c1w\",\"status\":\"Chat_status__2IBHM\",\"avaImage\":\"Chat_avaImage__140VT\",\"chatFooter\":\"Chat_chatFooter__CqbCp\",\"textarea\":\"Chat_textarea__1n5P4\",\"sendBtnContainer\":\"Chat_sendBtnContainer__1SZRb\",\"sendBtn\":\"Chat_sendBtn__1I1dT\",\"errors\":\"Chat_errors__2jDnO\",\"errorContainer\":\"Chat_errorContainer__3x10F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3Saei\",\"messageText\":\"Message_messageText__2-AN3\",\"avaContainer\":\"Message_avaContainer__2GHzL\",\"avaImage\":\"Message_avaImage__At4EU\",\"leading\":\"Message_leading__3Y8er\",\"ownerMessage\":\"Message_ownerMessage__yjSrJ\",\"ownerMessageText\":\"Message_ownerMessageText__2mVSn\",\"avaOwnerContainer\":\"Message_avaOwnerContainer__2e2CB\",\"avaOwnerImage\":\"Message_avaOwnerImage__3_D69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatList\":\"ChatList_chatList__3bjGz\",\"listItems\":\"ChatList_listItems__1VFLg\",\"searchBarContainer\":\"ChatList_searchBarContainer__3Fox1\",\"searchBar\":\"ChatList_searchBar__3wwjC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ListItem_listItem__2aia1\",\"active\":\"ListItem_active__mqkVa\",\"avaImageContainer\":\"ListItem_avaImageContainer__1jZC8\",\"avaImage\":\"ListItem_avaImage__3qowS\",\"listItemInfo\":\"ListItem_listItemInfo__oQRve\",\"username\":\"ListItem_username__2beI-\",\"message\":\"ListItem_message__3F03y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Dialogs_chatContainer__bY3Ry\"};","import React from 'react';\r\nimport style from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div>\r\n      {props.owner ? (\r\n        <div className={style.ownerMessage}>\r\n          <div className={style.avaOwnerContainer}>\r\n            <img className={style.avaOwnerImage} src={props.photoUrl} alt=\"\" />\r\n          </div>\r\n          <div className={style.ownerMessageText}>\r\n            <p className={style.leading}>{props.message}</p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={style.message}>\r\n          <div className={style.avaContainer}>\r\n            <img className={style.avaImage} src={props.photoUrl} alt=\"\" />\r\n          </div>\r\n          <div className={style.messageText}>\r\n            <p className={style.leading}>{props.message}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React from 'react';\r\nimport * as yup from 'yup';\r\nimport style from './Chat.module.css';\r\nimport Message from './Message/index';\r\n\r\nconst validationSchema = yup.object().shape({\r\n  messageBody: yup.string().max(300, 'Max char 300'),\r\n});\r\n\r\nconst Chat = (props) => {\r\n  const filtred = props.dialogsPage.messages.filter((m) => m.author === 'user1');\r\n  const messageElement = filtred.map((m, i) => (\r\n    <Message\r\n      username={props.dialogsPage.userData[0].username}\r\n      message={m.content}\r\n      owner={m.owner}\r\n      photoUrl={props.dialogsPage.userData[0].photoUrl}\r\n      key={i}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className={style.chatContainer}>\r\n      <div className={style.chatHeader}>\r\n        <div className={style.chatHeaderItem}>\r\n          <div className={style.avaImageContainer}>\r\n            <img className={style.avaImage} src={props.dialogsPage.userData[1].photoUrl} alt=\"\" />\r\n          </div>\r\n          <div className={style.chatHeaderInfo}>\r\n            <h4 className={style.username}>{`${props.dialogsPage.userData[0].username}`}</h4>\r\n            <p className={style.status}>{`is ${props.dialogsPage.userData[0].status}`}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div>{messageElement}</div>\r\n        <Formik\r\n          initialValues={{ messageBody: '' }}\r\n          onSubmit={(values, actions) => {\r\n            actions.validateForm(values.messageBody);\r\n            props.sendMessage(values.messageBody);\r\n            actions.setSubmitting(false);\r\n            actions.setValues({ messageBody: '' });\r\n          }}\r\n          validationSchema={validationSchema}\r\n          validateOnChange={false}\r\n          validateOnBlur={false}\r\n        >\r\n          {({ values, touched, errors, dirty, isValid, handleChange, handleSubmit }) => (\r\n            <Form onSubmit={handleSubmit} className={style.chatFooter}>\r\n              <Field\r\n                onChange={handleChange}\r\n                value={values.messageBody}\r\n                className={style.textarea}\r\n                placeholder=\"Your message\"\r\n                name={`messageBody`}\r\n                cols=\"50\"\r\n                rows=\"3\"\r\n              />\r\n              <div className={style.sendBtnContainer}>\r\n                <button disabled={!dirty && isValid} className={style.sendBtn} type={`submit`}>\r\n                  Send\r\n                </button>\r\n              </div>\r\n\r\n              <ErrorMessage component={`p`} className={style.errors} name={`messageBody`} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import { connect } from 'react-redux';\r\nimport { sendMessage } from 'redux/dialogsReducer';\r\nimport Chat from '.';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { sendMessage })(Chat);\r\n","import React from 'react';\r\nimport style from './ListItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst ListItem = (props) => {\r\n  return (\r\n    <NavLink\r\n      activeClassName={style.active}\r\n      className={style.listItem}\r\n      to={`/messages/${props.userId}`}\r\n    >\r\n      <div className={style.avaImageContainer}>\r\n        <img className={style.avaImage} src={props.photoUrl} alt=\"\" />\r\n      </div>\r\n      <div className={style.listItemInfo}>\r\n        <h4 className={style.username}>{props.username}</h4>\r\n        <p className={style.message}>hello world, soon...</p>\r\n      </div>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { useState } from 'react';\r\nimport style from './ChatList.module.css';\r\nimport ListItem from './ListItem/index';\r\n\r\nconst ChatList = (props) => {\r\n  const [query, setQuery] = useState('');\r\n  const listElement = props.dialogsPage.userData.map((u) => (\r\n    <ListItem key={u.userId} userId={u.userId} username={u.username} photoUrl={u.photoUrl} />\r\n  ));\r\n  return (\r\n    <div className={style.chatList}>\r\n      <div className={style.searchBarContainer}>\r\n        <div>\r\n          <input\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            value={query}\r\n            className={style.searchBar}\r\n            type=\"text\"\r\n            placeholder=\"Search: \"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={style.listItems}>{listElement}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n","import { connect } from 'react-redux';\r\nimport ChatList from '.';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nconst ChatListContainer = connect(mapStateToProps, {})(ChatList);\r\n\r\nexport default ChatListContainer;\r\n","import React from 'react';\r\nimport ChatContainer from './Chat/ChatContainer';\r\nimport ChatListContainer from './ChatList/ChatListContainer';\r\nimport style from './Dialogs.module.css';\r\n\r\nconst Dialogs = () => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>Dialogs</h1>\r\n      </div>\r\n      <div>\r\n        <div className={style.chatContainer}>\r\n          <ChatListContainer />\r\n          <ChatContainer />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n"],"sourceRoot":""}